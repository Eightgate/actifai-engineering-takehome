openapi: 3.0.0
info:
  title: Actifai Engineering Takehome API
  version: "1.0.0"
paths:
  /health:
    get:
      summary: Health check
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
                example: "Hello World!"

  /allUserInfo:
    get:
      summary: Retrieve all users
      responses:
        '200':
          description: List of user objects
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    name:
                      type: string
                      example: "Alice"
                    email:
                      type: string
                      example: "alice@example.com"

  /userInfo/{id}:
    get:
      summary: Retrieve a user by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A user object
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    name:
                      type: string
                      example: "Alice"
                    email:
                      type: string
                      example: "alice@example.com"
        '404':
          description: User not found

  /averageUserRevenue/{id}:
    get:
      summary: Get a user's average revenue (all time or within a date range)
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: User ID.
        - in: query
          name: start
          required: false
          schema:
            type: string
            format: date
          description: Start date (YYYY-MM-DD).
        - in: query
          name: end
          required: false
          schema:
            type: string
            format: date
          description: End date (YYYY-MM-DD).
      responses:
        '200':
          description: User average revenue.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    user_id:
                      type: integer
                      example: 11
                    averageRevenue:
                      type: number
                      format: float
                      example: 1500.25

  /averageDailyRevenue/{id}:
    get:
      summary: Get a user's average daily revenue (all time or date range)
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: User ID.
        - in: query
          name: start
          required: false
          schema:
            type: string
            format: date
          description: Start date (YYYY-MM-DD).
        - in: query
          name: end
          required: false
          schema:
            type: string
            format: date
          description: End date (YYYY-MM-DD).
      responses:
        '200':
          description: User average daily revenue time series.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    date:
                      type: string
                      format: date
                      example: "2021-08-06"
                    averageSale:
                      type: number
                      format: float
                      example: 3341

  /averageMonthlyRevenue/{id}:
    get:
      summary: Get a user's average monthly revenue (all time or date range)
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: User ID.
        - in: query
          name: start
          required: false
          schema:
            type: string
            format: date
          description: Start date (YYYY-MM-DD).
        - in: query
          name: end
          required: false
          schema:
            type: string
            format: date
          description: End date (YYYY-MM-DD).
      responses:
        '200':
          description: User average monthly revenue time series.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    date:
                      type: string
                      format: date
                      example: "2021-08-01"
                    averageSale:
                      type: number
                      format: float
                      example: 3341

  /getallgroups:
    get:
      summary: Retrieve all groups
      responses:
        '200':
          description: List of groups.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    name:
                      type: string
                      example: "Sales Team"

  /groupInfo/{id}:
    get:
      summary: Retrieve a group by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: Group ID.
      responses:
        '200':
          description: A group object.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    name:
                      type: string
                      example: "Sales Team"
        '404':
          description: Group not found

  /averageGroupRevenue/{id}:
    get:
      summary: Get a group's average revenue (all time or date range)
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: Group ID.
        - in: query
          name: start
          required: false
          schema:
            type: string
            format: date
          description: Start date (YYYY-MM-DD).
        - in: query
          name: end
          required: false
          schema:
            type: string
            format: date
          description: End date (YYYY-MM-DD).
      responses:
        '200':
          description: Group average revenue.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    group_id:
                      type: integer
                      example: 1
                    averageGroupRevenue:
                      type: number
                      format: float
                      example: 2500.5

  /averageDailyGroupRevenue/{id}:
    get:
      summary: Get a group's average daily revenue (all time or date range)
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: Group ID.
        - in: query
          name: start
          required: false
          schema:
            type: string
            format: date
          description: Start date (YYYY-MM-DD).
        - in: query
          name: end
          required: false
          schema:
            type: string
            format: date
          description: End date (YYYY-MM-DD).
      responses:
        '200':
          description: Group average daily revenue time series.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    date:
                      type: string
                      format: date
                      example: "2021-08-06"
                    averageSale:
                      type: number
                      format: float
                      example: 3341

  /averageMonthlyGroupRevenue/{id}:
    get:
      summary: Get a group's average monthly revenue (all time or date range)
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: Group ID.
        - in: query
          name: start
          required: false
          schema:
            type: string
            format: date
          description: Start date (YYYY-MM-DD).
        - in: query
          name: end
          required: false
          schema:
            type: string
            format: date
          description: End date (YYYY-MM-DD).
      responses:
        '200':
          description: Group average monthly revenue time series.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    date:
                      type: string
                      format: date
                      example: "2021-08-01"
                    averageSale:
                      type: number
                      format: float
                      example: 3341

  /getallsales:
    get:
      summary: Retrieve all sales records
      responses:
        '200':
          description: List of sales records.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 19
                    user_id:
                      type: integer
                      example: 20
                    amount:
                      type: number
                      format: float
                      example: 3341
                    date:
                      type: string
                      format: date
                      example: "2021-08-06"